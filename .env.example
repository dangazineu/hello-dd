# Hello-DD Environment Configuration
# Copy this file to .env and update with your values

# ==============================================================================
# GENERAL CONFIGURATION
# ==============================================================================

# Environment name (development, staging, production)
DD_ENV=development

# Application version
DD_VERSION=1.0.0

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ==============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# ==============================================================================

# PostgreSQL connection settings
POSTGRES_DB=inventory
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432

# Database pool settings
DB_MAX_CONNECTIONS=20
DB_CONNECTION_TIMEOUT=30

# ==============================================================================
# CACHE CONFIGURATION (Redis)
# ==============================================================================

# Redis connection settings
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Cache settings
CACHE_TTL=300
CACHE_MAX_ENTRIES=1000

# ==============================================================================
# SERVICE PORTS
# ==============================================================================

# API Gateway Service
API_GATEWAY_PORT=8000

# Inventory Service
INVENTORY_SERVICE_PORT=8001

# Pricing Service
PRICING_SERVICE_PORT=8002

# ==============================================================================
# SERVICE URLS (for inter-service communication)
# ==============================================================================

# Service discovery URLs
INVENTORY_SERVICE_URL=http://inventory-service:8001
PRICING_SERVICE_URL=http://pricing-service:8002

# ==============================================================================
# DEVELOPMENT TOOLS
# ==============================================================================

# Adminer (PostgreSQL Web UI)
ADMINER_PORT=8080

# Redis Commander credentials
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=admin
REDIS_COMMANDER_PORT=8081

# ==============================================================================
# DATADOG CONFIGURATION (Phase 2 - APM Testing)
# ==============================================================================

# Datadog API Key (get from https://app.datadoghq.com/organization-settings/api-keys)
DD_API_KEY=your_api_key_here

# Datadog site (datadoghq.com, datadoghq.eu, us3.datadoghq.com, us5.datadoghq.com, etc.)
DD_SITE=datadoghq.com

# Datadog Agent settings
DD_AGENT_HOST=datadog-agent
DD_TRACE_AGENT_PORT=8126
DD_DOGSTATSD_PORT=8125

# APM settings
DD_APM_ENABLED=true
DD_APM_NON_LOCAL_TRAFFIC=true

# Service names for Datadog
DD_SERVICE_API_GATEWAY=api-gateway
DD_SERVICE_INVENTORY=inventory-service
DD_SERVICE_PRICING=pricing-service

# Trace sampling rate (0.0 to 1.0)
DD_TRACE_SAMPLE_RATE=1.0

# ==============================================================================
# AWS CONFIGURATION (Phase 5 - Cloud Deployment)
# ==============================================================================

# AWS credentials (for cloud deployment)
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here
AWS_REGION=us-east-1

# EKS cluster settings
EKS_CLUSTER_NAME=hello-dd-cluster
EKS_NAMESPACE=hello-dd

# ==============================================================================
# PERFORMANCE SETTINGS
# ==============================================================================

# Request timeout settings (in seconds)
REQUEST_TIMEOUT=30
CIRCUIT_BREAKER_TIMEOUT=10
CIRCUIT_BREAKER_THRESHOLD=5

# Rate limiting
RATE_LIMIT_PER_MINUTE=1000
RATE_LIMIT_BURST=100

# Connection pool sizes
HTTP_CONNECTION_POOL_SIZE=50
HTTP_CONNECTION_TIMEOUT=10

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================

# Enable/disable features
ENABLE_METRICS=true
ENABLE_TRACING=true
ENABLE_PROFILING=false
ENABLE_CACHE=true
ENABLE_CIRCUIT_BREAKER=true

# ==============================================================================
# SECURITY SETTINGS
# ==============================================================================

# JWT settings (if implementing authentication)
JWT_SECRET_KEY=your_secret_key_here
JWT_EXPIRATION_HOURS=24

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization

# ==============================================================================
# TESTING CONFIGURATION
# ==============================================================================

# Test database (separate from main database)
TEST_POSTGRES_DB=inventory_test
TEST_POSTGRES_USER=postgres
TEST_POSTGRES_PASSWORD=postgres

# Load testing settings
LOAD_TEST_BASE_URL=http://localhost:8000
LOAD_TEST_DURATION=60s
LOAD_TEST_VUS=10